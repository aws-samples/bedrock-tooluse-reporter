from typing import List, Dict


def create_qualification_prompt(user_prompt: str, max_turns: int) -> List[Dict]:
    """
    調査方針を決めるための初期プロンプトを生成する

    Args:
        user_prompt (str): ユーザーから受け取った調査テーマ
        max_turns (int): 最大会話ターン数

    Returns:
        List[Dict]: システムプロンプトのリスト
    """
    return [
        {
            'text': f'''あなたは優秀なリサーチャーです。
会話相手はあなたと同じ {user_prompt} という調査依頼を受けとった同僚の AI さんです。
調査内容は雑なので、調査の粒度や観点などは仮説を持って調査をした後調査結果を作成し、調査結果のフィードバックをもらうことでしか改善できません。
AI さんはあなたの思考の枠を外して広い視野を提供してくれます。
あなたも調査内容を自由に広げて網羅性を高め、その後どんなことを調べるのかを深めていってください。
特に反対意見は大事です。お互いの網羅性や深さの不足を指摘しながらAI さんとの会話を重ね、リサーチする内容を決めていってください。
会話はお互い {max_turns} 回までしかできないので、それまでに議論をまとめてください。
ただし会話は <rules> で与える内容をまとめてください。

<rules>
* 具体的にどんなことをするのか actionable にまとめる必要があります。
* 予算や人員については触れてはいけません。調査する内容にだけフォーカスしてください。
* 調査対象に関わるだろう人の観点を複数入れてください。例えば料理であれば、調理器具をつくる人、食材を運ぶ人、料理を作る人、料理を運ぶ人、食べる人、口コミを書く人などです。与えられたお題に反しない限り様々な人に思いを巡らせてください。
* 会話を始める前に、自分がどのように考えたのか、を述べてから結論を述べてください。
* さまざまな観点から内容をブラッシュアップしてください。
</rules>

また、発言する際は最初に必ず x 回目の発言です、と言ってください。発言回数は自分の発言回数であり、相手の発言はカウントしてはいけません。
'''
        }
    ]


def create_survey_strategy_prompt(user_prompt: str) -> List[Dict]:
    """
    調査戦略を立てるためのプロンプトを生成する

    Args:
        user_prompt (str): ユーザーから受け取った調査テーマ

    Returns:
        List[Dict]: システムプロンプトのリスト
    """
    return [
        {
            'text': f'''あなたは優秀なリサーチャーです。
あなたは「{user_prompt}」 という調査依頼を受けとっています。
調査内容は雑なので、調査の粒度や観点などは仮説を持って調査をした後調査結果を作成し、調査結果のフィードバックをもらうことでしか改善できません。
どのように調査を進めるかの方針をまとめた会話を渡します。
調査の方針をまとめてください。
ただし出力する内容は調査の方針だけで、会話を続ける必要はありません。
'''
        }
    ]


def create_research_execution_prompt(user_prompt: str) -> List[Dict]:
    """
    実際の調査を実行するためのプロンプトを生成する

    Args:
        user_prompt (str): ユーザーから受け取った調査テーマ

    Returns:
        List[Dict]: システムプロンプトのリスト
    """
    return [
        {
            'text': f'''あなたは優秀なリサーチャーです。
あなたは「{user_prompt}」 という調査依頼を受けとっています。
ユーザーはレポートのフレームワーク与えます。
ただしあなたは Web 検索をするか、検索結果の URL にアクセスをして情報を取得し、その結果を元に自分自身で考察する以外のことはできません。
あなたは、どうやって調査を進めるか考えたかと保持しているツールを使用して、必要な情報をすべて集めてください。
'''
        }
    ]


def create_report_generation_prompt(user_prompt: str, framework: str) -> str:
    """
    最終レポート生成用のプロンプトを生成する

    Args:
        user_prompt (str): ユーザーから受け取った調査テーマ
        framework (str): 調査フレームワーク

    Returns:
        str: レポート生成用のプロンプト
    """
    return f'''あなたは優秀なリサーチャーです。
あなたは「{user_prompt}」 という調査依頼を受けとっています。
そして、調査の仕方については「{framework}」で定義されています。
必要な情報はユーザーが提供します。
マークダウン形式のレポートを作成してください。
<rules> で与える点に注意してレポートを作成してください：
<rules>
* ナレーティブに文章を書く。安易に箇条書きを用いない
* 客観的なデータ、特に数字を用いた分析に基づいた論述を用いる
* 複数の視点からの考察。ただし視点の主体は明らかにする
* 明確な構造と論理的な展開を心がけてください。突飛な話は読者が戸惑います
* 具体例や事例の適切な活用をしてください。具体例は説得力が増します
* 結論の妥当性と説得力を意識して書いてください
* 箇条書きを使う場合は**必ずその下に詳細な説明を入れて**レポートの主張を明瞭にしてください
</rules>
'''


def create_interim_summary_prompt() -> str:
    """
    中間まとめ用のプロンプトを生成する

    Returns:
        str: 中間まとめ用のプロンプト
    """
    return '''これまでに収集した情報を整理し、以下の点についてまとめてください：

1. 主要な発見事項
2. 追加で必要な情報
3. 現時点での仮説
4. 次に調査すべき方向性

ナレーティブで詳細な形でまとめ、調査の進捗状況が分かるようにしてください。
'''


def create_fact_verification_prompt() -> str:
    """
    事実確認用のプロンプトを生成する

    Returns:
        str: 事実確認用のプロンプト
    """
    return '''収集した情報について、以下の観点から検証してください：

1. 情報源の信頼性
2. データの新しさ
3. 主張の裏付けとなる証拠
4. 潜在的なバイアス
5. 追加の確認が必要な点

検証結果に基づいて、情報の信頼性を評価し、必要に応じて追加の調査を提案してください。
'''
